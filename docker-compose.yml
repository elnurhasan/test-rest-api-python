version: "3.9"

services:
  db:
    image: postgres:16-bullseye
    env_file:
      - .env
    volumes:
      - pg-vol:/var/lib/postgresql/data
      - ./pg_data/dump.sql:/docker-entrypoint-initdb.d/dummy_dump.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network
  api:
    build: .
    env_file:
      - .env
    command: bash -c "python manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    links:
      - db:db
      - redis:redis
      - celery:celery
    networks:
      - test-network
  celery:
    build: .
    env_file:
      - .env
    command: bash -c "celery -A user.celery worker --loglevel=info"
    restart: always
    volumes:
      - .:/app
    networks:
      - test-network
  celery_beat:
    build: .
    env_file:
      - .env
    command: bash -c "celery -A user.celery beat"
    restart: always
    volumes:
      - .:/app
    networks:
      - test-network
  redis:
    image: library/redis:5.0-alpine
    restart: unless-stopped
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  pg-vol:
